(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{1013:function(n,e,t){"use strict";t.r(e);var a={data:()=>({link:"",str:'\n        <template>\n          <div class="map">\n            <chinaMap ref="map" :options="options" :width="width" :height="height" :code="code" :geoCoordMap="geoCoordMap"></chinaMap>\n          </div>\n        </template>\n\n        <script>\n          import chinaMap from "./echarts/chinaMap";\n          export default {\n            data() {\n              return {\n                width: \'100%\',\n                height: \'800px\',\n                options: {\n                  top: 0,\n                  map: \'china\',\n                  // 是否运行缩放移动\n                  // 如果只想要开启缩放或者平移，可以设置成 \'scale\' 或者 \'move\'。设置成 true 为都开启\n                  roam: true,\n                  // 当前视角的中心点\n                  center: null,\n                  // 视角\n                  // aspectScale:0.75,\n                  // 当前视角的缩放比例。\n                  zoom: 1,\n                  // 滚轮缩放的极限控制\n                  // scaleLimit: {\n                  //   max:4,\n                  //   min:1\n                  // },\n                  // 选中地图 single单选  multiple多选\n                  selectedMode: \'multiple\',\n                  // 地图上文字样式与显示\n                  label: {\n                    show: false,\n                    color: \'#fff\',\n                    emphasis: {\n                      show: true\n                    }\n                  },\n                  itemStyle: {\n                    // 地图线条颜色\n                    normal: {\n                      areaColor: \'rgba(12,82,124,.9)\',\n                      borderColor: \'#0A93C6\',\n                      // 描边线条样式\n                      borderType: \'solid\',\n                      // 描边宽度\n                      borderWidth: 1\n                      // 设置边框阴影\n                      //  shadowColor: \'rgba(0, 0, 0, 0.5)\',\n                      //  shadowBlur: 10\n                    },\n                    // 鼠标经过时候的区域颜色\n                    emphasis: {\n                      areaColor: \'#355AC3\'\n                    }\n                  },\n                  // 地图中对特定的区域配置样式。\n                  regions: [\n                    // {\n                    //   name: "河南",\n                    //   itemStyle: {\n                    //     areaColor: "red",\n                    //     color: "red"\n                    //   }\n                    // },\n                    // {\n                    //   name: "焦作市",\n                    //   itemStyle: {\n                    //     areaColor: "red",\n                    //     color: "red"\n                    //   }\n                    // }\n                  ]\n                },\n                code: 100000,\n                geoCoordMap: []\n              };\n            },\n            components: {\n              chinaMap\n            },\n            mounted() {\n              this.getList()\n            },\n            methods: {\n              getList() {\n                // geoCoordMap 数据一般是后台返回的 格式为下面的格式\n                this.geoCoordMap = [{\n                    name: \'河南\',\n                    value: [113.52, 35.22, 1525]\n                  },\n                  {\n                    name: \'河南2\',\n                    value: [106.3586, 38.1775, 1525]\n                  }]\n                // 重新渲染地图\n                setTimeout(() => {\n                  this.$refs.map.mapChart("mapChart");\n                }, 500);\n              },\n              /*  getMap方法说明\n              *  @method 查询省份地图\n              *  @param { Number } code 城市代码\n              *  @param { Array } geoCoordMap 实际值 \n              *  @param { mapMsg } 配置项 \n              */\n              getMap(code, geoCoordMap, mapMsg) {\n                this.code = code;\n                this.geoCoordMap = geoCoordMap;\n                for (let key in mapMsg) {\n                  this.options[key] = mapMsg[key];\n                }\n                setTimeout(() => {\n                  this.$refs.map.mapChart("mapChart");\n                }, 500);\n              }\n            }\n          };\n        <\/script>\n\n        <style>\n          .home {\n            width: 100%;\n            height: 100vh;\n            background: #0d2158;\n          }\n          .btn {\n            width: 100px;\n            height: 80px;\n            display: inline-block;\n            margin-right: 20px;\n            line-height: 80px;\n            cursor: pointer;\n            text-align: center;\n            color: #fff;\n          }\n          .map {\n            width: 100%;\n            /* height: 500px; */\n          }\n        </style>\n      '})},o=t(23),r=Object(o.a)(a,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"echarts地图封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#echarts地图封装"}},[n._v("#")]),n._v(" Echarts地图封装")]),n._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[n._v("TIP")]),n._v(" "),t("p",[t("a",{attrs:{href:"http://39.99.37.143:3000/ZhangMengLin/MapEcharts",target:"_blank",rel:"noopener noreferrer"}},[n._v("组件地址"),t("OutboundLink")],1)])]),n._v(" "),[t("demo",{attrs:{codeStr:n.str}})]],2)}),[],!1,null,null,null);e.default=r.exports}}]);