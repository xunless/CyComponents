(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{1017:function(n,s,t){"use strict";t.r(s);var i={data:()=>({str:"\n        <script>\n          // \n            使用方法：\n              1、把tools目录放到项目根目录，与pages文件夹同级，里面所有的方法都在里面了\n\n              2、根目录新建一个文件夹nativeplugins，把YOYO-JPush文件夹放进去\n\n              3、打自定义基座的时候，记得要在manifest.json中，APP模块权限配置 - 勾选 【消息推送】\n          // 第一种，云打包： 1、App.vue 初始化极光推送服务与申请推送权限</div>\n\n          import JPushPlugin from '@/tools/JPush.js';\n          export default {\n            onLaunch: function() {\n                // console.log('App Launch')\n                // 当uni-app 初始化完成时触发（全局只触发一次）\n                // #ifdef APP-PLUS\n                if(plus.os.name == 'iOS'){\n                    JPushPlugin.init() // 初始化 JPush 插件，如果没有调用这个方法，JS 端将不会收到相关事件。\n                    JPushPlugin.applyPushAuthority() // 申请推送权限\n\n                    JPushPlugin.addReceiveNotificationListener(function (notification) {\n                        console.log('jpush receive' + JSON.stringify(notification))\n                    })\n                }\n                // #endif\n            },\n          }\n\n          // 2、登录成功后，绑定别名，或者标签，这里示意绑定将userid（一定要是唯一值）绑定为别名：\n\n          import JPushPlugin from '@/tools/JPush.js';\n          export default {\n              methods: {\n                  submitForm(e){\n                      // 登录提交表单后，服务器返回userid 或者 用户唯一标识，作为alias别名\n                      var  userid =\"1\";\n                      // #ifdef APP-PLUS\n                      // 设置别名\n                      if (this.platform == 'iOS') {\n                              JPushPlugin.setAlias(userid, (res) => {\n                                  console.log('jpush setAlias' + JSON.stringify(res))\n                              }, (err) => {\n                                  console.log('jpush error' + JSON.stringify(err))\n                              })\n                      }\n                      // #endif\n                  }\n              }\n          }\n\n          //  3、用户退出后，清除别名绑定\n\n          import JPushPlugin from '@/tools/JPush.js';\n\n          // #ifdef APP-PLUS\n          if (plus.os.name == 'iOS') {\n              console.log('清空绑定的别名');\n              JPushPlugin.deleteAlias((res) => {\n                console.log('cleanTags' + JSON.stringify(res))\n              }, (err) => {\n                console.log('error' + JSON.stringify(err))\n              })\n          }\n          // #endif\n\n        <\/script>\n      "})},e=t(23),o=Object(e.a)(i,(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"极光推送ios插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#极光推送ios插件"}},[n._v("#")]),n._v(" 极光推送ios插件")]),n._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[n._v("TIP")]),n._v(" "),t("p",[t("a",{attrs:{href:"http://39.99.37.143:3000/liuzhen/PushTestDemo.git",target:"_blank",rel:"noopener noreferrer"}},[n._v("组件地址"),t("OutboundLink")],1)])]),n._v(" "),[t("demo",{attrs:{codeStr:n.str}})]],2)}),[],!1,null,null,null);s.default=o.exports}}]);